# coding=utf-8

import asyncio
import re
from pyrogram.enums import ChatAction, MessageEntityType
import openai
from pyrogram import Client, filters

# Your OpenAI API key
import configparser

from pyrogram.types import MessageEntity

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ConfigParser
config = configparser.ConfigParser()

# –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ config.ini
config.read('config.ini')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Å–µ–∫—Ü–∏–∏ 'Config'
openai_api_key = config.get('Config', 'openai_api_key')
api_id = config.get('Config', 'api_id')
api_hash = config.get('Config', 'api_hash')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pyrogram Client
app = Client(name="garmvs", api_id=api_id, api_hash=api_hash)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
openai.api_key = openai_api_key

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —á–∞—Ç-—Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
chat_sessions = {}
# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏—è
initiated_users = set()


async def send_initial_message(user_id):
    await app.send_message(user_id,text='''–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å! –ù–∞ —Å–≤—è–∑–∏ –§—É–ª—Ñ–∏–ª–º–µ–Ω—Ç –ù–∞–¥–µ–∂–Ω—ã–µ –õ—é–¥–∏\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –Æ–ª–∏—è, –Ω–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏ —Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç–∞: –ø–æ–º–æ—â—å –≤ –∑–∞–±–æ—Ä–µ, —É–ø–∞–∫–æ–≤–∫–µ, –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞ –±—Ä–∞–∫, –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ª—é–±–æ–π —Å–∫–ª–∞–¥.  –ê —Ç–∞–∫–∂–µ –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ (–∫–∞—Ä—Ç–æ—á–µ–∫) –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö. \n\n–û–±—Ä–∞—Ç–∏–≤—à–∏—Å—å –∫ –Ω–∞–º –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\n\nüî•100% –∞–∫–∫—É—Ä–∞—Ç–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É, –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞.\n\nüî•–ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–∑ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–Ω–µ—à–Ω–µ–º—É –≤–∏–¥—É –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é.\n\nüî•–°–æ–±–ª—é–¥–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–∞ \n–í—Ä–µ–º—è - —ç—Ç–æ –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏. –ü–æ—ç—Ç–æ–º—É –º—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑—ã –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏ \n\n–ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!\n–ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: 8-906-142-86-98\n–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª : https://t.me/fulfilment_turnkey24\n\n–ù–ê –ü–ï–†–í–£–Æ –û–¢–ì–†–£–ó–ö–£ –î–ï–õ–ê–ï–ú –°–ö–ò–î–ö–£ 50%üéÅ''', entities=[MessageEntity(type=MessageEntityType.PHONE_NUMBER, offset=620, length=15),
MessageEntity(type=MessageEntityType.URL, offset=658, length=33),
MessageEntity(type=MessageEntityType.CUSTOM_EMOJI, offset=729, length=2, custom_emoji_id=5203996991054432397),
])
    initiated_users.add(user_id)


def create_prompt(user_id):
    messages = chat_sessions[user_id]['messages']
    prompt = [
        {"role": "system",
         "content": """–Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ –§—É–ª—Ñ–∏–ª–º–µ–Ω—Ç –ù–∞–¥–µ–∂–Ω—ã–µ –ø–∞—Ç–Ω–µ—Ä—ã. –ú–æ—è –∑–∞–¥–∞—á–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏:  
–£—Å–ª—É–≥–∏ –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:
–ó–∞–±–æ—Ä –≥—Ä—É–∑–∞ —Å –¢–Ø–ö ¬´–ú–æ—Å–∫–≤–∞¬ª, ¬´–Æ–∂–Ω—ã–µ –≤–æ—Ä–æ—Ç–∞¬ª, ¬´–°–∞–¥–æ–≤–æ–¥¬ª, –ö–æ—Ç–µ–ª—å–Ω–∏–∫–∏ –¥–æ 1 –∫—É–±. –º–µ—Ç—Ä–∞ - 1500 —Ä—É–±.
–ó–∞–±–æ—Ä –∫–∞–∂–¥–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫—É–±. –º–µ—Ç—Ä–∞ - 2000 —Ä—É–±.
–ó–∞–±–æ—Ä –≥—Ä—É–∑–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î 1 –∫—É–± - 3000 —Ä—É–±.
–ó–∞–±–æ—Ä –≥—Ä—É–∑–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ú–ö–ê–î - –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.
–£—Å–ª—É–≥–∏ –ø–æ –ø–æ–≥—Ä—É–∑–∫–µ/—Ä–∞–∑–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è:
–†–∞–∑–≥—Ä—É–∑–∫–∞ –∑–∞ 1 –º–µ—Å—Ç–æ (—Ç–æ–≤–∞—Ä/–∫–æ—Ä–æ–±) –¥–æ 20 –∫–≥ - 50 —Ä—É–±.
–†–∞–∑–≥—Ä—É–∑–∫–∞ –∑–∞ 1 –º–µ—Å—Ç–æ (—Ç–æ–≤–∞—Ä/–∫–æ—Ä–æ–±) —Å–≤—ã—à–µ 20 –∫–≥ - 100 —Ä—É–±.
–†–∞–∑–≥—Ä—É–∑–∫–∞ –∑–∞ 1 –º–µ—Å—Ç–æ (–º–µ—à–æ–∫) - 150 —Ä—É–±.
–†–∞–∑–≥—Ä—É–∑–∫–∞ –∑–∞ 1 –º–µ—Å—Ç–æ (–∫–æ—Ä–æ–± –≤ –æ–±—Ä–µ—à–µ—Ç–∫–µ) - 150 —Ä—É–±.
–†–∞–∑–≥—Ä—É–∑–∫–∞/–ø–æ–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ø–∞–ª–ª–µ—Ç–µ —Å –¥–æ—Å—Ç—É–ø–æ–º –≤ –∫—É–∑–æ–≤ —Å –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π —Ä–æ—Ö–ª–∏ –∑–∞ 1 –ø–∞–ª–ª–µ—Ç—É - 250 —Ä—É–±.
–£—Å–ª—É–≥–∏ –ø–æ –ø—Ä–∏–µ–º–∫–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è:
–í—Å–∫—Ä—ã—Ç–∏–µ –æ–±—Ä–µ—à–µ—Ç–∫–∏ (–ø–∞–ª–ª–µ—Ç) - 500 —Ä—É–±.
–í—Å–∫—Ä—ã—Ç–∏–µ –æ–±—Ä–µ—à–µ—Ç–∫–∏ (–∫–æ—Ä–æ–±) - 150 —Ä—É–±.
–í—Å–∫—Ä—ã—Ç–∏–µ 1 –≥—Ä—É–∑–æ–º–µ—Å—Ç–∞ —Å –∫–∞—Ä–≥–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∫–ª–∞–¥—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã - 50 —Ä—É–±.
–£–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:
–£–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –≤–æ–∑–¥—É—à–Ω–æ-–ø—É–∑—ã—Ä—å–∫–æ–≤—É—é –ø–ª–µ–Ω–∫—É –∑–∞ 1 –µ–¥. 1 —Å–ª–æ–π (—Å—É–º–º–∞ —Å—Ç–æ—Ä–æ–Ω –¥–æ 30 —Å–º) - 5 —Ä—É–±.
–£–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ —Å—Ç—Ä–µ–π—á –ø–ª–µ–Ω–∫—É (–ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, –±–µ–ª–∞—è, —á–µ—Ä–Ω–∞—è) 2 —Å–ª–æ—è (—Å—É–º–º–∞ —Å—Ç–æ—Ä–æ–Ω –¥–æ 30 —Å–º) - 20 —Ä—É–±.
–£–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –ø–∞–∫–µ—Ç –ü–í–î (–ø–æ–¥ –∑–∞–ø–∞–π–∫—É, –ø–ª–æ—Ç–Ω–æ—Å—Ç—å 75-100 –º–∫–º), —Ä–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ 100*200 –º–º - 10 —Ä—É–±.
–ü—Ä–æ—á–∏–µ —É—Å–ª—É–≥–∏:
–ù–∞–∫–ª–µ–π–∫–∞ ¬´–•—Ä—É–ø–∫–æ–µ¬ª - 2 —Ä—É–±.
–í–ª–æ–∂–µ–Ω–∏–µ –≤–∏–∑–∏—Ç–∫–∏/—Ñ–ª–∞–µ—Ä–∞ - 5 —Ä—É–±.
–ë–∏—Ä–∫–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ç–µ—Ä–º–æ–ø–∏—Å—Ç–æ–ª–µ—Ç (—Å –±–∏—Ä–∫–æ–π –∫–ª–∏–µ–Ω—Ç–∞) - 2 —Ä—É–±.
–£—Å–ª—É–≥–∏ –¥–ª—è –ø–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:
–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ (–¥–æ 10 –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ –ø–æ—Å—Ç–∞–≤–∫–µ) - 250 —Ä—É–±.
–ì–æ—Ñ—Ä–æ–∫–æ—Ä–æ–± 60x40x40 –∑–∞ 1 –µ–¥. - 150 —Ä—É–±.
–°—Ç–∏–∫–µ—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ 1 –µ–¥. - 6 —Ä—É–±.
–£—Å–ª—É–≥–∏ –ø–æ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –Ω–∞ —Å–∫–ª–∞–¥—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:
Wildberries –ö–æ–ª–µ–¥–∏–Ω–æ: –¥–æ 3-—Ö –∫–æ—Ä–æ–±–æ–≤ 60x40x40 - 1500 —Ä—É–±.
Ozon –°–∞–ª–∞—Ä—å–µ–≤–æ: –¥–æ 3-—Ö –∫–æ—Ä–æ–±–æ–≤ 60x40x40 - 1500 —Ä—É–±.
–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –°–æ—Ñ—å–∏–Ω–æ: –¥–æ 10-—Ç–∏ –∫–æ—Ä–æ–±–æ–≤ 60x40x40 - 1500 —Ä—É–±.
–£—Å–ª—É–≥–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è (–∑–∞ –º–µ—Å—è—Ü):
1 –ø–æ–ª–∫–∞ - 500 —Ä—É–±.
1 —Å—Ç–µ–ª–ª–∞–∂ (5 –ø–æ–ª–æ–∫) - 3500 —Ä—É–±.
–£—Å–ª—É–≥–∏ –∑–∞–±–æ—Ä–∞ —Å–∞–º–æ–≤—ã–∫—É–ø–æ–≤:
–ó–∞–±–æ—Ä –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞ - 45 —Ä—É–±.
–ó–∞–±–æ—Ä –µ–¥–∏–Ω–∏—Ü—ã –æ–±—ä–µ–º–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–ø—É—Ö–æ–≤–∏–∫–∏, –∫—É—Ä—Ç–∫–∏ –∏ —Ç.–¥.) - 90 —Ä—É–±.
 """}

    ]
    prompt.extend(messages)
    return prompt


async def handle_chat_with_gpt(user_id, message):
    if user_id not in chat_sessions:
        chat_sessions[user_id] = {'messages': []}

    chat_sessions[user_id]['messages'].append({'role': 'user', 'content': message})

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Enum –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await app.send_chat_action(user_id, ChatAction.TYPING)

    prompt = create_prompt(user_id)
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=prompt
    )

    chat_sessions[user_id]['messages'].append(
        {'role': 'assistant', 'content': response['choices'][0]['message']['content']})
    await app.send_message(user_id, response['choices'][0]['message']['content'])


# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
keywords_pattern = re.compile(r'\b(–º–µ–Ω–µ–¥–∂–µ—Ä|—Å–∞–π—Ç|–∫–æ–º–ø–∞–Ω–∏—è|—Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç|—Ñ—Ñ|–∫–∏—Ç–∞–π)\b',
                              re.IGNORECASE)


@app.on_message(filters.text & filters.regex(keywords_pattern) & ~filters.private)
async def detect_keywords_in_group(client, message):
    user_id = message.from_user.id
    if user_id not in initiated_users:
        await send_initial_message(user_id)


@app.on_message(filters.command("stopchat"))
async def stop_chat(client, message):
    user_id = message.from_user.id
    if user_id in initiated_users:
        initiated_users.remove(user_id)
        await message.reply_text("–û–±—â–µ–Ω–∏–µ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ.")


@app.on_message(filters.command("startchat"))
async def start_chat(client, message):
    user_id = message.from_user.id
    if user_id not in initiated_users:
        initiated_users.add(user_id)
        await message.reply_text("–û–±—â–µ–Ω–∏–µ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ.")


@app.on_message(filters.private & ~filters.command("start"))
async def private_message_handler(client, message):
    user_id = message.from_user.id
    if user_id in initiated_users:
        await handle_chat_with_gpt(user_id, message.text)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app.run()